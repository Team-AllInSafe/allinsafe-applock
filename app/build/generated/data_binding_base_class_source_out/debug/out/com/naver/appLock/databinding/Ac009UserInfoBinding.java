// Generated by view binder compiler. Do not edit!
package com.naver.appLock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.naver.appLock.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Ac009UserInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final TextView btnPatternSet;

  @NonNull
  public final TextView btnPinSet;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvLockmethod;

  @NonNull
  public final TextView tvUsername;

  private Ac009UserInfoBinding(@NonNull LinearLayout rootView, @NonNull ImageView backButton,
      @NonNull TextView btnPatternSet, @NonNull TextView btnPinSet, @NonNull TextView titleText,
      @NonNull TextView tvEmail, @NonNull TextView tvLockmethod, @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.btnPatternSet = btnPatternSet;
    this.btnPinSet = btnPinSet;
    this.titleText = titleText;
    this.tvEmail = tvEmail;
    this.tvLockmethod = tvLockmethod;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Ac009UserInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Ac009UserInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ac0_09_user_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Ac009UserInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.btn_pattern_set;
      TextView btnPatternSet = ViewBindings.findChildViewById(rootView, id);
      if (btnPatternSet == null) {
        break missingId;
      }

      id = R.id.btn_pin_set;
      TextView btnPinSet = ViewBindings.findChildViewById(rootView, id);
      if (btnPinSet == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.tv_email;
      TextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tv_lockmethod;
      TextView tvLockmethod = ViewBindings.findChildViewById(rootView, id);
      if (tvLockmethod == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      return new Ac009UserInfoBinding((LinearLayout) rootView, backButton, btnPatternSet, btnPinSet,
          titleText, tvEmail, tvLockmethod, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
